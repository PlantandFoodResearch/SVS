# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on: pull_request_target

jobs:
  build:



  
    runs-on: ubuntu-latest
    
    permissions:
      actions: write
      pages: write      
      id-token: write
      contents: write
      pull-requests: write
      deployments: write    
            
    environment:
      name: github-pages
      url: ${{ steps.change-page-url.outputs.new_page_url }}    
    
    defaults:
      run:
        working-directory: ./modelCsharp
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Install Python 3
      uses: actions/setup-python@v1
      with:
        python-version: 3.11.6  
        
     #installing packages                     
    - name: Install Python pandas
      run: python -m pip install --upgrade pip pandas      
    - name: Install Python aspose
      run: python -m pip install --upgrade pip aspose.words           
    - name: Install Python matplotlib
      run: python -m pip install --upgrade pip matplotlib                      
    - name: Install Python pyinstaller
      run: python -m pip install --upgrade pip datetime
    - name: Install Python datetime
      run: pip install pyinstaller
      
    - name: Create a temporary artifact downloads folder for graphs
      run: mkdir graphs
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
         
    - name: run
      run: dotnet run --project ConsoleAppSVS-test/ConsoleAppSVS-test.csproj
                     
    - name: run python 
      run: python TestModel/testGraph/testGraph/testGraph.py         
     
    - name: moving artfacts to temp folder
      run: |
        mv index.html graphs
        mv index.001.png graphs
                  
    - name: Step 3 - Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
        name: folder for graphs
        path: ./modelCsharp/graphs
            
    - name: Deploy ðŸš€
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./modelCsharp/graphs 
                
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}      
        
    - name: Override page_url
      id: change-page-url
      run: echo "new_page_url=${{ steps.deployment.outputs.page_url }}index.html" >> $GITHUB_OUTPUT 
               